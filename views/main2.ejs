<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Document</title>
    
    <!-- google -->
    <!-- <meta name ="google-signin-client_id" content="389276646904-dvflpeo02hnoqjft0anhntu72gtvloig.apps.googleusercontent.com"> -->
    <!-- kakao -->
    <script src="https://developers.kakao.com/sdk/js/kakao.js"></script>
</head>
<body>
    <h1>메인창</h1>

    <a href = "/sign/signin">로그인</a>
    <a href = "/sign/signup">회원가입</a>
    <!-- <a href = "/sign/kakao" id = "kakao">카카오톡</a> -->

    <ul>
        <li onclick = "kakaoLogin();">
            <a href="javascript:void(0)"><span>카카오 로그인</span></a>
        </li>

        <li onclick = "kakaoLogout();">
            <a href="javascript:void(0)"><span>카카오 로그아웃</span></a>
        </li>
    </ul>

    <ul>
        <li id = "GgCustomLogin">
            <a href="javascript:void(0)"><span>구글 로그인</span></a>
        </li>
    </ul>

    <!-- 카카오 스크립트 -->
    <script src="https://developers.kakao.com/sdk/js/kakao.js"></script>
    <script>
        Kakao.init('966cd89e4a2aec000f0c186e68244c89'); 
        console.log(Kakao.isInitialized()); //sdk 초기화 여부 판단

        //kakao 로그인
        function kakaoLogin() {
            Kakao.Auth.login({
              success: function (response) {
                Kakao.API.request({
                  url: '/sign/kakao',
                  success: function (response) {
                      console.log(response)
                  },
                  fail: function (error) {
                    console.log(error)
                  },
                })
              },
              fail: function (error) {
                console.log(error)
              },
            })
          }

          //kakao 로그아웃
          function kakaoLogout() {
            if (Kakao.Auth.getAccessToken()) {
              Kakao.API.request({
                url: '/sign/kakao',
                success: function (response) {
                    console.log(response)
                },
                fail: function (error) {
                  console.log(error)
                },
              })
              Kakao.Auth.setAccessToken(undefined)
            }
          }  

          //구글 로그인

          /*
          //처음 실행하는 함수
          function init() {
            gapi.load('auth2', function() {
                gapi.auth2.init();
                options = new gapi.auth2.SigninOptionsBuilder();
                options.setPrompt('select_account');
                // 추가는 Oauth 승인 권한 추가 후 띄어쓰기 기준으로 추가
                options.setScope('email profile openid https://www.googleapis.com/auth/user.birthday.read');
                // 인스턴스의 함수 호출 - element에 로그인 기능 추가
                // GgCustomLogin은 li태그안에 있는 ID, 위에 설정한 options와 아래 성공,실패시 실행하는 함수들
                gapi.auth2.getAuthInstance().attachClickHandler('GgCustomLogin', options, onSignIn, onSignInFailure);
                })
            }   


            function onSignIn(googleUser) {
                var access_token = googleUser.getAuthResponse().access_token
                $.ajax({
                    method:'GET',
                    // people api를 이용하여 프로필 및 생년월일에 대한 선택동의후 가져온다.
                    url: 'https://people.googleapis.com/v1/people/me', 
                    data: {personFields:'birthdays', 
                    key:'AIzaSyAe0cxI7ISjO7q3LKmvlpPcS-nKou5jHe0', 'access_token': access_token}, 
                })
                .done(function(e){
                    //프로필을 가져온다.
                    var profile = googleUser.getBasicProfile();
                    console.log(profile)
                })
                .fail(function(e){
                    console.log(e);
                })
            }


            function onSignInFailure(t){		
                console.log(t);
            }*/
    </script>

    <!-- 구글 api 사용을 위한 스크립트 -->
    <!-- <script src="https://apis.google.com/js/platform.js?onload=init" async defer></script> -->
</body>
</html>